# Generated by Django 4.1 on 2022-09-10 23:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('F', 'Film'), ('S', 'Series'), ('B', 'Book')], default=None, max_length=1)),
                ('title', models.CharField(default=None, max_length=250)),
                ('local_title', models.CharField(help_text='The title of the film in its original language, blank if english', max_length=250, null=True)),
                ('description', models.TextField(null=True)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('members', models.IntegerField(default=0)),
                ('prequels', models.ManyToManyField(help_text='Any related media set before this one, with nothing else in between', to='media.media')),
                ('related_media', models.ManyToManyField(help_text='Any media related to this but not before or after it', to='media.media')),
                ('sequels', models.ManyToManyField(help_text='Any related media set after this one, with nothing else in between', to='media.media')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episodes', models.IntegerField(help_text='The number of episodes in this TV series', null=True)),
                ('rating', models.CharField(choices=[('U', 'Universal'), ('PG', 'Parental guidance'), ('12A', 'Cinema release suitable for 12 years and over'), ('12', 'Video release suitable for 12 years and over'), ('15', 'Suitable only for 15 years and over'), ('18', 'Suitable only for adults'), ('R18', 'Adults works for licensed premises only')], help_text='The BBFC age rating of this series, rounded down from local age rating if none exists', max_length=3)),
                ('airing_status', models.CharField(choices=[('N', 'Not yet aired'), ('C', 'Currently airing'), ('F', 'Finished airing')], default=None, max_length=1)),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='media.media')),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runtime', models.IntegerField(help_text='The total runtime of the film in minutes', null=True)),
                ('rating', models.CharField(choices=[('U', 'Universal'), ('PG', 'Parental guidance'), ('12A', 'Cinema release suitable for 12 years and over'), ('12', 'Video release suitable for 12 years and over'), ('15', 'Suitable only for 15 years and over'), ('18', 'Suitable only for adults'), ('R18', 'Adults works for licensed premises only')], help_text='The BBFC age rating of this series, rounded down from local age rating if none exists', max_length=3)),
                ('release_status', models.CharField(choices=[('N', 'Not yet released'), ('C', 'Currently in cinemas'), ('F', 'Released')], default=None, max_length=1)),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='media.media')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapters', models.IntegerField(help_text='The number of chapters in this book', null=True)),
                ('release_status', models.CharField(choices=[('N', 'Not yet published'), ('P', 'Published')], default=None, max_length=1)),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='media.media')),
            ],
        ),
    ]
